{% import "_includes/forms" as forms %}

<form action="" method="POST">
    <input type="hidden" name="action" value="list-builder/source/edit">
    <input type="hidden" name="type" value="3">

    {% if source.id %}<input type="hidden" name="sourceId" value="{{ source.id }}">{% endif %}
    {{ csrfInput() }}

    <h2>Description</h2>

    <p class="type-description">
        Popups require zero code and can be trigged at the optimum moment when a user is most likely to convert.
    </p>

    {{ forms.textField({
        label: "Reference" | t('list-builder'),
        instructions: "Add a reference for this signup source so that it's easy to identify later." | t('list-builder'),
        id: 'name',
        name: 'name',
        value: source.name,
        errors: source.getErrors('name'),
        required: false,
    }) }}

    <h2>Display</h2>

    <div class="field" id="theme-field">
        <div class="heading">
            <label id="theme-label" for="theme">Theme</label>
            <div class="instructions">
                <p>Select a theme for your form or leave it unstyled for maximum control.</p>
            </div>
        </div>
        <div class="input ltr">
            <input class="lb-hidden-radio" type="radio" name="conf-theme" value="1" id="type3theme1"
                {{ not source.getConfigValue('theme') or source.getConfigValue('theme') == 1 ? 'checked="checked"' : '' }}
                >
            <label class="lb-theme-select-label" for="type3theme1">
                {% set previewUrl = view.getAssetManager().getPublishedUrl('@mattgrayisok/listbuilder/assetbundles/listbuilder/dist', true) ~ '/img/popupTheme1.png' %}
                <span>No Styles</span>
                <img src="{{ previewUrl }}" width="300px">
            </label>
            <input class="lb-hidden-radio" type="radio" name="conf-theme" value="2" id="type3theme2"
                {{ source.getConfigValue('theme') == 2 ? 'checked="checked"' : '' }}
                >
            <label class="lb-theme-select-label" for="type3theme2">
                {% set previewUrl = view.getAssetManager().getPublishedUrl('@mattgrayisok/listbuilder/assetbundles/listbuilder/dist', true) ~ '/img/popupTheme2.png' %}
                <span>Simple</span>
                <img src="{{ previewUrl }}" width="300px">
            </label>
        </div>
    </div>

    <div class="field" id="theme-field">
        <div class="heading">
            <label id="theme-label" for="theme">Image</label>
            <div class="instructions">
                <p>(Optional) Inserted at the top of the popup or in the background depending on the selected theme.</p>
            </div>
        </div>
        <div class="input ltr">

        {{ forms.elementSelect({
                  id: "conf-headerimage",
                  name: "conf-headerimage",
                  viewMode: "large",
                  elements: headerimageElements,
                  elementType: elementType,
                  criteria: {
                      kind: ["image"],
                  },
                  jsClass: 'Craft.AssetSelectInput',
                  selectionLabel: "Select image"|t("list-builder"),
                  sources: [],
                  limit: 1,
                  warning: false,
                  errors: source.getErrors("headerimage"),
              }) }}

          </div>
      </div>

    {{ forms.textField({
        label: "Title" | t('list-builder'),
        instructions: "The main heading for the form." | t('list-builder'),
        id: 'conf-title',
        name: 'conf-title',
        value: source.getConfigValue('title'),
        errors: source.getErrors('title'),
        required: false,
    }) }}

    {{ forms.textField({
        label: "Text" | t('list-builder'),
        instructions: "Any text which appears under the main title." | t('list-builder'),
        id: 'conf-text',
        name: 'conf-text',
        value: source.getConfigValue('text'),
        errors: source.getErrors('text'),
        required: false,
    }) }}

    {{ forms.textField({
        label: "Button Text" | t('list-builder'),
        instructions: "The text which appears on the submit button." | t('list-builder'),
        id: 'conf-submittext',
        name: 'conf-submittext',
        value: source.getConfigValue('submittext'),
        errors: source.getErrors('submittext'),
        required: false,
    }) }}

    {{ forms.textField({
        label: "Success message" | t('list-builder'),
        instructions: "The message to display when a user successfully subscribes.",
        id: 'conf-success-message',
        name: 'conf-success-message',
        value: source.getConfigValue('success-message'),
        errors: source.getErrors('success-message'),
        required: false,
    }) }}

    <h2>Consent</h2>

    {{ forms.lightswitchField({
        label: "Include consent checkbox" | t('list-builder'),
        instructions: "When enabled the form will include a check box which complies with GDPR consent rules." | t('list-builder'),
        name: 'conf-consent',
        on: source.getConfigValue('consent') ?? false,
    }) }}

    {{ forms.lightswitchField({
        label: "Allow signups without consent" | t('list-builder'),
        instructions: "If consent is enabled, should users be able to subscribe without giving consent?" | t('list-builder'),
        name: 'conf-allownoconsent',
        on: source.getConfigValue('allownoconsent') ?? false,
    }) }}

    {{ forms.textField({
        label: "Custom consent message" | t('list-builder'),
        instructions: "Enter a custom message to show alongside the consent checkbox.<br>
You can include links to your privacy policy using a standard &lt;a&gt; tag<br>
Leave blank to use the default." | t('list-builder'),
        id: 'conf-consenttext',
        name: 'conf-consenttext',
        value: source.getConfigValue('consenttext'),
        errors: source.getErrors('consenttext'),
        required: false,
    }) }}

    <h2>Triggers</h2>

    {{ forms.textField({
        label: "Show after delay" | t('list-builder'),
        instructions: "The popup will display after this number of seconds.<br>Leave blank to disable." | t('list-builder'),
        id: 'conf-delay',
        name: 'conf-delay',
        value: source.getConfigValue('delay'),
        errors: source.getErrors('delay'),
        required: false,
    }) }}

    {{ forms.lightswitchField({
        label: "Exit Intent" | t('list-builder'),
        instructions: "Display when the user is about to leave the site" | t('list-builder'),
        name: 'conf-exitintent',
        on: source.getConfigValue('exitintent') ?? false,
    }) }}

    <h2>Submissions</h2>

    {{ forms.lightswitchField({
        label: "Use Ajax" | t('list-builder'),
        instructions: "Should the form use ajax to avoid page reloads?" | t('list-builder'),
        name: 'conf-ajax',
        on: source.getConfigValue('ajax') ?? true,
    }) }}

    {{ forms.textField({
        label: "Redirect" | t('list-builder'),
        instructions: "For non-ajax submissions, where should the user be redirected after signup?<br>Leave blank to redirect back to the previous page.<br>Aliases such as '@web' are available.",
        id: 'conf-redirect',
        name: 'conf-redirect',
        value: source.getConfigValue('redirect'),
        errors: source.getErrors('redirect'),
        required: false,
    }) }}


    <button type="submit" class="btn submit">Save</button>

</form>
